[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# before the main one please
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "local left_text = {}"
position = "before"
match_indent = true
payload = 'local temp_dollars = 0'

# add_round_eval_row()
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif config.name == 'hands' then"
position = "before"
match_indent = true
payload = '''
elseif config.name == 'subtotal' then
    local spacer = {n=G.UIT.R, config={align = "cm", minw = width}, nodes={
                            {n=G.UIT.O, config={object = DynaText({string = {'......................................'}, colours = {G.C.WHITE},shadow = true, float = true, y_offset = -30, scale = 0.45, spacing = 13.5, font = G.LANGUAGES['en-us'].font, pop_in = 0})}}
                            }}
    G.round_eval:add_child(spacer, G.round_eval:get_UIE_by_ID(config.bonus and 'bonus_round_eval' or 'base_round_eval'))
    table.insert(left_text, {n=G.UIT.T, config={text = "$"..config.dollars, scale = 0.8*scale, colour = G.C.MONEY, shadow = true, juice = true}})
    table.insert(left_text, {n=G.UIT.O, config={object = DynaText({string = {" Total dollars accumulated"}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, pop_in = 0, scale = 0.4*scale, silent = true})}})
    temp_dollars = config.dollars
elseif config.name == 'scaling' then
        if G.GAME.modifiers.money_total_scaling < 1 then
            table.insert(left_text, {n=G.UIT.O, config={object = DynaText({string = {G.GAME.modifiers.money_total_scaling.."x Total"}, colours = {G.C.RED}, shadow = true, pop_in = 0, scale = 0.6*scale, silent = true})}})
        else
            table.insert(left_text, {n=G.UIT.O, config={object = DynaText({string = {G.GAME.modifiers.money_total_scaling.."x Total"}, colours = {G.C.BLUE}, shadow = true, pop_in = 0, scale = 0.6*scale, silent = true})}})
        end
'''

# evaluate_round()
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "dollars = dollars + G.GAME.current_round.hands_left*(G.GAME.modifiers.money_per_hand or 1)"
position = "at"
match_indent = true
payload = 'dollars = math.floor(dollars + G.GAME.current_round.hands_left*(G.GAME.modifiers.money_per_hand or 1))'

#part 2
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "add_round_eval_row({name = 'bottom', dollars = dollars})"
position = "before"
match_indent = true
payload = '''
if G.GAME.modifiers.money_total_scaling ~= 100 then
    add_round_eval_row({dollars = dollars, name = 'subtotal', bonus = true, pitch = pitch})
    delay(0.2)
    if (dollars * (G.GAME.modifiers.money_total_scaling)) % 1 < 0.5 then
        dollars = math.floor(dollars * (G.GAME.modifiers.money_total_scaling))
    else
        dollars = math.ceil(dollars * (G.GAME.modifiers.money_total_scaling))
    end
    add_round_eval_row({dollars = 0, name = 'scaling', bonus = true, pitch = pitch})
end
'''